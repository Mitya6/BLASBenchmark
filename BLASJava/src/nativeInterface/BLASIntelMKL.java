/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nativeInterface;

public class BLASIntelMKL {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected BLASIntelMKL(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BLASIntelMKL obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        BLASCppModuleJNI.delete_BLASIntelMKL(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void daxpy(int n, double alpha, SWIGTYPE_p_double x, int incx, SWIGTYPE_p_double y, int incy) {
    BLASCppModuleJNI.BLASIntelMKL_daxpy(swigCPtr, this, n, alpha, SWIGTYPE_p_double.getCPtr(x), incx, SWIGTYPE_p_double.getCPtr(y), incy);
  }

  public void daxpby(int n, double alpha, SWIGTYPE_p_double x, int incx, double beta, SWIGTYPE_p_double y, int incy) {
    BLASCppModuleJNI.BLASIntelMKL_daxpby(swigCPtr, this, n, alpha, SWIGTYPE_p_double.getCPtr(x), incx, beta, SWIGTYPE_p_double.getCPtr(y), incy);
  }

  public void dgemv(int order, int transA, int m, int n, double alpha, SWIGTYPE_p_double A, int lda, SWIGTYPE_p_double x, int incx, double beta, SWIGTYPE_p_double y, int incy) {
    BLASCppModuleJNI.BLASIntelMKL_dgemv(swigCPtr, this, order, transA, m, n, alpha, SWIGTYPE_p_double.getCPtr(A), lda, SWIGTYPE_p_double.getCPtr(x), incx, beta, SWIGTYPE_p_double.getCPtr(y), incy);
  }

  public void dgemm(int order, int transA, int transB, int m, int n, int k, double alpha, SWIGTYPE_p_double A, int lda, SWIGTYPE_p_double B, int ldb, double beta, SWIGTYPE_p_double C, int ldc) {
    BLASCppModuleJNI.BLASIntelMKL_dgemm(swigCPtr, this, order, transA, transB, m, n, k, alpha, SWIGTYPE_p_double.getCPtr(A), lda, SWIGTYPE_p_double.getCPtr(B), ldb, beta, SWIGTYPE_p_double.getCPtr(C), ldc);
  }

  public BLASIntelMKL() {
    this(BLASCppModuleJNI.new_BLASIntelMKL(), true);
  }

}
